{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AbdullahBozdag\\\\Documents\\\\_apo_bozdag\\\\no303\\\\no303-cafemenu-frontend\\\\src\\\\screens\\\\RecipesList\\\\RecipesListScreen.js\";\nimport React, { useLayoutEffect } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport styles from \"./styles\";\nimport { getRecipes, getCategoryName, getRecipesByIngredient } from \"../../data/MockDataAPI\";\nexport default function RecipesListScreen(props) {\n  var _route$params,\n      _this = this;\n\n  var navigation = props.navigation,\n      route = props.route;\n  var item = route == null ? void 0 : (_route$params = route.params) == null ? void 0 : _route$params.category;\n  var recipesArray = getRecipes(item.id);\n  useLayoutEffect(function () {\n    var _route$params2;\n\n    navigation.setOptions({\n      title: (_route$params2 = route.params) == null ? void 0 : _route$params2.title,\n      headerRight: function headerRight() {\n        return React.createElement(View, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 26\n          }\n        });\n      }\n    });\n  }, []);\n\n  var onPressRecipe = function onPressRecipe(item) {\n    navigation.navigate(\"Recipe\", {\n      item: item\n    });\n  };\n\n  var renderRecipes = function renderRecipes(_ref) {\n    var item = _ref.item;\n    return React.createElement(TouchableHighlight, {\n      underlayColor: \"rgba(73,182,77,0.9)\",\n      onPress: function onPress() {\n        return onPressRecipe(item);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, React.createElement(TouchableHighlight, {\n      underlayColor: \"rgba(73,182,77,0.9)\",\n      onPress: function onPress() {\n        return onPressRecipe(item);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }, React.createElement(Image, {\n      style: styles.photo,\n      source: {\n        uri: item.photo_url\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }), React.createElement(Text, {\n      style: styles.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, item.title), React.createElement(Text, {\n      style: styles.category,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, getCategoryName(item.categoryId)))));\n  };\n\n  return React.createElement(ScrollView, {\n    style: styles.mainContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      borderBottomWidth: 0.4,\n      marginBottom: 10,\n      borderBottomColor: \"grey\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: styles.photoIngredient,\n    source: {\n      uri: \"\" + ingredientUrl\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  })), React.createElement(Text, {\n    style: styles.ingredientInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Recipes with \", ingredientName, \":\"), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    vertical: true,\n    showsVerticalScrollIndicator: false,\n    numColumns: 2,\n    data: getRecipesByIngredient(ingredientId),\n    renderItem: renderRecipes,\n    keyExtractor: function keyExtractor(item) {\n      return \"\" + item.recipeId;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/AbdullahBozdag/Documents/_apo_bozdag/no303/no303-cafemenu-frontend/src/screens/RecipesList/RecipesListScreen.js"],"names":["React","useLayoutEffect","styles","getRecipes","getCategoryName","getRecipesByIngredient","RecipesListScreen","props","navigation","route","item","params","category","recipesArray","id","setOptions","title","headerRight","onPressRecipe","navigate","renderRecipes","container","photo","uri","photo_url","categoryId","mainContainer","borderBottomWidth","marginBottom","borderBottomColor","photoIngredient","ingredientUrl","ingredientInfo","ingredientName","ingredientId","recipeId"],"mappings":"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","sourcesContent":["import React, { useLayoutEffect } from \"react\";\nimport {FlatList, Text, View, TouchableHighlight, Image, ScrollView} from \"react-native\";\nimport styles from \"./styles\";\nimport {getRecipes, getCategoryName, getRecipesByIngredient} from \"../../data/MockDataAPI\";\n\nexport default function RecipesListScreen(props) {\n  const { navigation, route } = props;\n\n  const item = route?.params?.category;\n  const recipesArray = getRecipes(item.id);\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      title: route.params?.title,\n      headerRight: () => <View />,\n    });\n  }, []);\n\n  const onPressRecipe = (item) => {\n    navigation.navigate(\"Recipe\", { item });\n  };\n\n  const renderRecipes = ({ item }) => (\n      <TouchableHighlight underlayColor=\"rgba(73,182,77,0.9)\" onPress={() => onPressRecipe(item)}>\n        <TouchableHighlight underlayColor=\"rgba(73,182,77,0.9)\" onPress={() => onPressRecipe(item)}>\n          <View style={styles.container}>\n            <Image style={styles.photo} source={{ uri: item.photo_url }} />\n            <Text style={styles.title}>{item.title}</Text>\n            <Text style={styles.category}>{getCategoryName(item.categoryId)}</Text>\n          </View>\n        </TouchableHighlight>\n      </TouchableHighlight>\n  );\n\n  return (\n      <ScrollView style={styles.mainContainer}>\n        <View style={{ borderBottomWidth: 0.4, marginBottom: 10, borderBottomColor: \"grey\" }}>\n          <Image style={styles.photoIngredient} source={{ uri: \"\" + ingredientUrl }} />\n        </View>\n        <Text style={styles.ingredientInfo}>Recipes with {ingredientName}:</Text>\n        <View>\n          <FlatList vertical showsVerticalScrollIndicator={false} numColumns={2} data={getRecipesByIngredient(ingredientId)} renderItem={renderRecipes} keyExtractor={(item) => `${item.recipeId}`} />\n        </View>\n      </ScrollView>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}