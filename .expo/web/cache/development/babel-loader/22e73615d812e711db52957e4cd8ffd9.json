{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { recipes } from \"./dataArrays\";\nimport axios from 'axios';\nvar baseApi = 'http://127.0.0.1:8000/api/v1';\n\nvar getData = function getData(apiPath) {\n  var method,\n      configurationObject,\n      response,\n      _args = arguments;\n  return _regeneratorRuntime.async(function getData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          method = _args.length > 1 && _args[1] !== undefined ? _args[1] : 'get';\n          configurationObject = {\n            method: method,\n            url: baseApi + \"/\" + apiPath\n          };\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(axios(configurationObject));\n\n        case 4:\n          response = _context.sent;\n          console.log(response.data);\n          console.log(\"asd\", baseApi + \"/\" + apiPath);\n          fetch(baseApi + \"/\" + apiPath, {\n            headers: {\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            }\n          }).then(function (response) {\n            console.log(response);\n            return response.data;\n          }).then(function (myJson) {\n            console.log(myJson);\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport function getCategories() {\n  return getData('categories');\n}\nexport function getPosts(categoryId) {\n  var recipesArray = [];\n  recipes.map(function (data) {\n    if (data.categoryId == categoryId) {\n      recipesArray.push(data);\n    }\n  });\n  return recipesArray;\n}","map":{"version":3,"sources":["C:/Users/AbdullahBozdag/Documents/_apo_bozdag/no303/no303-cafemenu-frontend/src/data/apiCall.js"],"names":["recipes","axios","baseApi","getData","apiPath","method","configurationObject","url","response","console","log","data","fetch","headers","then","myJson","getCategories","getPosts","categoryId","recipesArray","map","push"],"mappings":";AAAA,SAAQA,OAAR;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAMC,OAAO,GAAG,8BAAhB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgBC,UAAAA,MAAhB,2DAAuB,KAAvB;AACNC,UAAAA,mBADM,GACgB;AACxBD,YAAAA,MAAM,EAAEA,MADgB;AAExBE,YAAAA,GAAG,EAAKL,OAAL,SAAgBE;AAFK,WADhB;AAAA;AAAA,2CAKWH,KAAK,CAACK,mBAAD,CALhB;;AAAA;AAKNE,UAAAA,QALM;AAMZC,UAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AAEAF,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAsBR,OAAtB,SAAiCE,OAAjC;AACAQ,UAAAA,KAAK,CAAIV,OAAJ,SAAeE,OAAf,EAA0B;AACvBS,YAAAA,OAAO,EAAE;AACL,8BAAgB,kBADX;AAEL,wBAAU;AAFL;AADc,WAA1B,CAAL,CAOKC,IAPL,CAOU,UAAUN,QAAV,EAAoB;AACtBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,mBAAOA,QAAQ,CAACG,IAAhB;AACH,WAVL,EAWKG,IAXL,CAWU,UAAUC,MAAV,EAAkB;AACpBN,YAAAA,OAAO,CAACC,GAAR,CAAYK,MAAZ;AACH,WAbL;;AATY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;;AAyBA,OAAO,SAASC,aAAT,GAAyB;AAC5B,SAAOb,OAAO,CAAC,YAAD,CAAd;AACH;AAED,OAAO,SAASc,QAAT,CAAkBC,UAAlB,EAA8B;AACjC,MAAMC,YAAY,GAAG,EAArB;AACAnB,EAAAA,OAAO,CAACoB,GAAR,CAAY,UAAAT,IAAI,EAAI;AAChB,QAAIA,IAAI,CAACO,UAAL,IAAmBA,UAAvB,EAAmC;AAC/BC,MAAAA,YAAY,CAACE,IAAb,CAAkBV,IAAlB;AACH;AACJ,GAJD;AAKA,SAAOQ,YAAP;AACH","sourcesContent":["import {recipes} from \"./dataArrays\";\r\nimport axios from 'axios';\r\n\r\nconst baseApi = 'http://127.0.0.1:8000/api/v1'\r\n\r\nconst getData = async (apiPath, method='get') => {\r\n    const configurationObject = {\r\n        method: method,\r\n        url: `${baseApi}/${apiPath}`,\r\n    };\r\n    const response = await axios(configurationObject);\r\n    console.log(response.data);\r\n\r\n    console.log(\"asd\", `${baseApi}/${apiPath}`)\r\n    fetch(`${baseApi}/${apiPath}`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        }\r\n    )\r\n        .then(function (response) {\r\n            console.log(response)\r\n            return response.data;\r\n        })\r\n        .then(function (myJson) {\r\n            console.log(myJson);\r\n        });\r\n}\r\n\r\nexport function getCategories() {\r\n    return getData('categories');\r\n}\r\n\r\nexport function getPosts(categoryId) {\r\n    const recipesArray = [];\r\n    recipes.map(data => {\r\n        if (data.categoryId == categoryId) {\r\n            recipesArray.push(data);\r\n        }\r\n    });\r\n    return recipesArray;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}