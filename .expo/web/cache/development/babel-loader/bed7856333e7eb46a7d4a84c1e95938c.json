{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\AbdullahBozdag\\\\Documents\\\\_apo_bozdag\\\\no303\\\\no303-cafemenu-frontend\\\\src\\\\screens\\\\RecipesList\\\\RecipesListScreen.js\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport styles from \"./styles\";\nimport { getRecipes } from \"../../data/MockDataAPI\";\nimport axios from \"axios\";\nimport { baseApi } from \"../../data/apiCall\";\nexport default function RecipesListScreen(props) {\n  var _route$params,\n      _this = this;\n\n  var navigation = props.navigation,\n      route = props.route;\n  var item = route == null ? void 0 : (_route$params = route.params) == null ? void 0 : _route$params.category;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  useEffect(function () {\n    axios.get(baseApi + \"/posts?category_id=\" + item.id).then(function (_ref) {\n      var data = _ref.data;\n      setData(data.data);\n    }).catch(function (error) {\n      return console.error(error);\n    }).finally(function () {\n      return setLoading(false);\n    });\n  }, []);\n  useLayoutEffect(function () {\n    var _route$params2;\n\n    navigation.setOptions({\n      title: (_route$params2 = route.params) == null ? void 0 : _route$params2.title,\n      headerRight: function headerRight() {\n        return React.createElement(View, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 26\n          }\n        });\n      }\n    });\n  }, []);\n\n  var renderRecipes = function renderRecipes(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(TouchableHighlight, {\n      underlayColor: \"rgb(183 183 183 / 90%)\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }\n    }, React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, React.createElement(Image, {\n      style: styles.photo,\n      source: {\n        uri: item.image\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }), React.createElement(Text, {\n      style: styles.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, item.title), React.createElement(Text, {\n      style: styles.category,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, item.title, \" \\u20BA\")));\n  };\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, isLoading ? React.createElement(ActivityIndicator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 20\n    }\n  }) : React.createElement(FlatList, {\n    vertical: true,\n    showsVerticalScrollIndicator: false,\n    numColumns: 2,\n    data: data,\n    renderItem: renderRecipes,\n    keyExtractor: function keyExtractor(item) {\n      return \"\" + item.id;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/AbdullahBozdag/Documents/_apo_bozdag/no303/no303-cafemenu-frontend/src/screens/RecipesList/RecipesListScreen.js"],"names":["React","useEffect","useLayoutEffect","useState","styles","getRecipes","axios","baseApi","RecipesListScreen","props","navigation","route","item","params","category","isLoading","setLoading","data","setData","get","id","then","catch","error","console","finally","setOptions","title","headerRight","renderRecipes","container","photo","uri","image"],"mappings":"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","sourcesContent":["import React, {useEffect, useLayoutEffect, useState} from \"react\";\nimport {FlatList, Text, View, TouchableHighlight, Image, ActivityIndicator} from \"react-native\";\nimport styles from \"./styles\";\nimport { getRecipes } from \"../../data/MockDataAPI\";\nimport axios from \"axios\";\nimport {baseApi} from \"../../data/apiCall\";\n\nexport default function RecipesListScreen(props) {\n  const { navigation, route } = props;\n\n  const item = route?.params?.category;\n  const [isLoading, setLoading] = useState(true);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    axios.get(`${baseApi}/posts?category_id=${item.id}`)\n        .then(({ data }) => {\n          setData(data.data)\n        })\n        .catch((error) => console.error(error))\n        .finally(() => setLoading(false));\n  }, []);\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      title: route.params?.title,\n      headerRight: () => <View />,\n    });\n  }, []);\n\n  /*const onPressRecipe = (item) => {\n    navigation.navigate(\"Recipe\", { item });\n  };*/\n\n  const renderRecipes = ({ item }) => (\n    <TouchableHighlight underlayColor=\"rgb(183 183 183 / 90%)\" /*onPress={() => onPressRecipe(item)}*/>\n      <View style={styles.container}>\n        <Image style={styles.photo} source={{ uri: item.image }} />\n        <Text style={styles.title}>{item.title}</Text>\n        <Text style={styles.category}>{item.title} â‚º</Text>\n        {/*<Text style={styles.category}>{getCategoryName(item.categoryId)}</Text>*/}\n      </View>\n    </TouchableHighlight>\n  );\n\n  return (\n    <View>\n      {isLoading ? <ActivityIndicator/> : (\n      <FlatList vertical showsVerticalScrollIndicator={false} numColumns={2} data={data} renderItem={renderRecipes} keyExtractor={(item) => `${item.id}`} />\n      )}\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}